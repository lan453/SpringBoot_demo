<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot_demo.dao.mapper.TcolleageMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot_demo.entity.Tcolleage">
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, code
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot_demo.entity.TcolleageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tcolleage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tcolleage
    where id = #{id,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    delete from tcolleage
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot_demo.entity.TcolleageExample">
    delete from tcolleage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot_demo.entity.Tcolleage">
    insert into tcolleage (id, name, code
      )
    values (#{id,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot_demo.entity.Tcolleage">
    insert into tcolleage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null and id>0">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot_demo.entity.TcolleageExample" resultType="java.lang.Long">
    select count(*) from tcolleage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tcolleage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=TINYINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tcolleage
    set id = #{record.id,jdbcType=TINYINT},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot_demo.entity.Tcolleage">
    update tcolleage
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot_demo.entity.Tcolleage">
    update tcolleage
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR}
    where id = #{id,jdbcType=TINYINT}
  </update>
  <resultMap id="VColleageMap" type="com.example.springboot_demo.ventity.VColleage">
    <id column="id" jdbcType="SMALLINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="text" />
  </resultMap>
  <select id="selectVColleage" resultMap="VColleageMap"  resultType="com.example.springboot_demo.ventity.VColleage">
    select id,name from Tcolleage
  </select>
  <resultMap id="colleageTreeMap" type="com.example.springboot_demo.ventity.VColleage">
    <id column="id" jdbcType="SMALLINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="text" />
    <collection property="children" ofType="com.example.springboot_demo.ventity.VColleage">
      <id column="classId" jdbcType="SMALLINT" property="id" />
      <result column="className" jdbcType="VARCHAR" property="text" />
    </collection>
  </resultMap>
  <select id="selectCascadeClass" resultMap="colleageTreeMap">
    select c.id,c.name,cl.id as classId,cl.name as className from Tcolleage c left join Tclass cl
    on c.id=cl.colleageId
    where year(now())-cl.enteryear <![CDATA[<]]> 4
  </select>
  <select id="selectClassTree" resultMap="VColleageMap" >
    select id,name from Tclass where colleageID = #{arg0} and enteryear = #{arg1}
  </select>
</mapper>
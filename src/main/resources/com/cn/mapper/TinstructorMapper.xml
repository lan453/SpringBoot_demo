<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot_demo.dao.mapper.TinstructorMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot_demo.entity.Tinstructor">
    <id column="id" jdbcType="SMALLINT" property="id" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="enterdate" jdbcType="DATE" property="enterdate" />
    <result column="leavedate" jdbcType="DATE" property="leavedate" />
    <result column="colleageId" jdbcType="TINYINT" property="colleageid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, num, name, enterdate, leavedate, colleageId
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot_demo.entity.TinstructorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tinstructor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tinstructor
    where id = #{id,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
    delete from tinstructor
    where id = #{id,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot_demo.entity.TinstructorExample">
    delete from tinstructor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot_demo.entity.Tinstructor" useGeneratedKeys="true" keyProperty="id">
    insert into tinstructor (num, name,
      enterdate, leavedate, colleageId
      )
    values (#{num,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{enterdate,jdbcType=DATE}, #{leavedate,jdbcType=DATE}, #{colleageid,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot_demo.entity.Tinstructor">
    insert into tinstructor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="enterdate != null">
        enterdate,
      </if>
      <if test="leavedate != null">
        leavedate,
      </if>
      <if test="colleageid != null">
        colleageId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=SMALLINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="enterdate != null">
        #{enterdate,jdbcType=DATE},
      </if>
      <if test="leavedate != null">
        #{leavedate,jdbcType=DATE},
      </if>
      <if test="colleageid != null">
        #{colleageid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot_demo.entity.TinstructorExample" resultType="java.lang.Long">
    select count(*) from tinstructor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tinstructor
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=SMALLINT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.enterdate != null">
        enterdate = #{record.enterdate,jdbcType=DATE},
      </if>
      <if test="record.leavedate != null">
        leavedate = #{record.leavedate,jdbcType=DATE},
      </if>
      <if test="record.colleageid != null">
        colleageId = #{record.colleageid,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tinstructor
    set id = #{record.id,jdbcType=SMALLINT},
      num = #{record.num,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      enterdate = #{record.enterdate,jdbcType=DATE},
      leavedate = #{record.leavedate,jdbcType=DATE},
      colleageId = #{record.colleageid,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot_demo.entity.Tinstructor">
    update tinstructor
    <set>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="enterdate != null">
        enterdate = #{enterdate,jdbcType=DATE},
      </if>
      <if test="leavedate != null">
        leavedate = #{leavedate,jdbcType=DATE},
      </if>
      <if test="colleageid != null">
        colleageId = #{colleageid,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot_demo.ventity.Vinstructor">
    update tinstructor
    set num = #{num,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      enterdate = #{enterdate,jdbcType=DATE},
      leavedate = #{leavedate,jdbcType=DATE},
      colleageId = #{colleageid,jdbcType=TINYINT}
    where id = #{id,jdbcType=SMALLINT}
  </update>
  <resultMap id="queryInstructor" type="com.example.springboot_demo.ventity.Vinstructor">
    <id column="id" jdbcType="SMALLINT" property="id" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="enterdate" jdbcType="DATE" property="enterdate" />
    <result column="leavedate" jdbcType="DATE" property="leavedate" />
    <result column="colleageId" jdbcType="TINYINT" property="colleageid" />
  </resultMap>
  <select id="selectInstructorTable" resultMap="queryInstructor" parameterType="com.example.springboot_demo.ventity.InstructorClassQueryParam">
    select distinct i.id,i.num,i.name,i.enterdate,i.leavedate,c.name as colleageName,i.colleageId
    from
        Tinstructor i,Tcolleage c,Tclass cl
    <if test="(enteryears != null and enteryears.isEmpty==false) or (majorIds != null and majorIds.isEmpty==false)">
      ,TinstructorClass ic
    </if>
        where i.colleageId=c.id
    <if test="(enteryears != null and enteryears.isEmpty==false) or (majorIds != null and majorIds.isEmpty==false)">
    and i.id=ic.instructorID
    and ic.classId=cl.id
    </if>
    <if test="num!=null and num != ''">      and i.num like concat('%',#{num,jdbcType=VARCHAR},'%')
    </if>
    <if test="name!=null and name!=''">
      and i.name like concat('%',#{name,jdbcType=VARCHAR},'%')
    </if>
    <if test="colleageId!=null and colleageId!=-1">
      and i.colleageId=#{colleageId,jdbcType=TINYINT}
    </if>
    <if test="enteryears != null and enteryears.isEmpty==false">
      and
      <foreach item="item" index="index" collection="enteryears" open="cl.enteryear in (" separator="," close=")">
        #{item}
      </foreach>
    </if>
    <if test="majorIds != null and majorIds.isEmpty==false">
      and
      <foreach item="item" index="index" collection="majorIds" open=" cl.majorID in (" separator="," close=")">
        #{item}
      </foreach>
    </if>
    order by num asc
  </select>

</mapper>
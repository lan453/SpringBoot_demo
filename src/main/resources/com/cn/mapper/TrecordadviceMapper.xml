<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot_demo.dao.mapper.TrecordadviceMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot_demo.entity.Trecordadvice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="festival" jdbcType="TINYINT" property="festival" />
    <result column="beginDate" jdbcType="TIMESTAMP" property="begindate" />
    <result column="endDate" jdbcType="TIMESTAMP" property="enddate" />
    <result column="regbeginDate" jdbcType="TIMESTAMP" property="regbegindate" />
    <result column="regendDate" jdbcType="TIMESTAMP" property="regenddate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, festival, beginDate, endDate, regbeginDate, regendDate
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot_demo.entity.TrecordadviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trecordadvice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trecordadvice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trecordadvice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot_demo.entity.TrecordadviceExample">
    delete from trecordadvice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot_demo.entity.Trecordadvice">
    insert into trecordadvice (id, festival, beginDate, 
      endDate, regbeginDate, regendDate
      )
    values (#{id,jdbcType=BIGINT}, #{festival,jdbcType=TINYINT}, #{begindate,jdbcType=TIMESTAMP}, 
      #{enddate,jdbcType=TIMESTAMP}, #{regbegindate,jdbcType=TIMESTAMP}, #{regenddate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot_demo.entity.Trecordadvice">
    insert into trecordadvice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="festival != null">
        festival,
      </if>
      <if test="begindate != null">
        beginDate,
      </if>
      <if test="enddate != null">
        endDate,
      </if>
      <if test="regbegindate != null">
        regbeginDate,
      </if>
      <if test="regenddate != null">
        regendDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="festival != null">
        #{festival,jdbcType=TINYINT},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="regbegindate != null">
        #{regbegindate,jdbcType=TIMESTAMP},
      </if>
      <if test="regenddate != null">
        #{regenddate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot_demo.entity.TrecordadviceExample" resultType="java.lang.Long">
    select count(*) from trecordadvice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trecordadvice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.festival != null">
        festival = #{record.festival,jdbcType=TINYINT},
      </if>
      <if test="record.begindate != null">
        beginDate = #{record.begindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enddate != null">
        endDate = #{record.enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.regbegindate != null">
        regbeginDate = #{record.regbegindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.regenddate != null">
        regendDate = #{record.regenddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trecordadvice
    set id = #{record.id,jdbcType=BIGINT},
      festival = #{record.festival,jdbcType=TINYINT},
      beginDate = #{record.begindate,jdbcType=TIMESTAMP},
      endDate = #{record.enddate,jdbcType=TIMESTAMP},
      regbeginDate = #{record.regbegindate,jdbcType=TIMESTAMP},
      regendDate = #{record.regenddate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot_demo.entity.Trecordadvice">
    update trecordadvice
    <set>
      <if test="festival != null">
        festival = #{festival,jdbcType=TINYINT},
      </if>
      <if test="begindate != null">
        beginDate = #{begindate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        endDate = #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="regbegindate != null">
        regbeginDate = #{regbegindate,jdbcType=TIMESTAMP},
      </if>
      <if test="regenddate != null">
        regendDate = #{regenddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot_demo.entity.Trecordadvice">
    update trecordadvice
    set festival = #{festival,jdbcType=TINYINT},
      beginDate = #{begindate,jdbcType=TIMESTAMP},
      endDate = #{enddate,jdbcType=TIMESTAMP},
      regbeginDate = #{regbegindate,jdbcType=TIMESTAMP},
      regendDate = #{regenddate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="NowFestivalResultMap" type="com.example.springboot_demo.ventity.Vrecordadvice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="beginDate" jdbcType="TIMESTAMP" property="begindate" />
    <result column="endDate" jdbcType="TIMESTAMP" property="enddate" />
    <result column="regbeginDate" jdbcType="TIMESTAMP" property="regbegindate" />
    <result column="regendDate" jdbcType="TIMESTAMP" property="regenddate" />
  </resultMap>
  <select id="selectNowFestival" resultMap="NowFestivalResultMap">
    select id,
    (select concat(des,'假日登记') from TSysdic
    where value=festival and tablename ='COMON'
    and filedname='FESTIVAL') as name,
    beginDate,endDate,regbeginDate,regendDate
    from trecordadvice
    where
    now() &gt;=regbeginDate
    and
    now() &lt;=regendDate
  </select>

  <resultMap id="listResultMap" type="com.example.springboot_demo.ventity.ComBoxEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="text" />
  </resultMap>

  <select id="listFestival" resultMap="listResultMap">
    select re.id,sy.des as text from trecordadvice re,tsysdic sy
    where sy.tablename="COMON" and sy.filedname="FESTIVAL" and re.festival=sy.value
  </select>
  <update id="updateRegDate" parameterType="com.example.springboot_demo.ventity.UpdateRegDatesParam">
    UPDATE trecordadvice
    SET regbeginDate = #{regbegindate,jdbcType=TIMESTAMP},
        regendDate = #{regenddate,jdbcType=TIMESTAMP}
    WHERE id = #{id}
</update>

</mapper>
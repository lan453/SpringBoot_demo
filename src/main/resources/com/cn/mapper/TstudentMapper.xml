<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot_demo.dao.mapper.TstudentMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot_demo.entity.Tstudent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="province" jdbcType="BIGINT" property="province" />
    <result column="city" jdbcType="BIGINT" property="city" />
    <result column="county" jdbcType="BIGINT" property="county" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, num, name, tel, gender, state, province, city, county, pwd
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot_demo.entity.TstudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tstudent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tstudent
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tstudent
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot_demo.entity.TstudentExample">
    delete from tstudent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot_demo.entity.Tstudent">
    insert into tstudent (id, num, name, 
      tel, gender, state, province, 
      city, county, pwd)
    values (#{id,jdbcType=BIGINT}, #{num,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{state,jdbcType=TINYINT}, #{province,jdbcType=BIGINT}, 
      #{city,jdbcType=BIGINT}, #{county,jdbcType=BIGINT}, #{pwd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot_demo.entity.Tstudent">
    insert into tstudent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=BIGINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=BIGINT},
      </if>
      <if test="county != null">
        #{county,jdbcType=BIGINT},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot_demo.entity.TstudentExample" resultType="java.lang.Long">
    select count(*) from tstudent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tstudent
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=BIGINT},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=BIGINT},
      </if>
      <if test="record.county != null">
        county = #{record.county,jdbcType=BIGINT},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tstudent
    set id = #{record.id,jdbcType=BIGINT},
      num = #{record.num,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      state = #{record.state,jdbcType=TINYINT},
      province = #{record.province,jdbcType=BIGINT},
      city = #{record.city,jdbcType=BIGINT},
      county = #{record.county,jdbcType=BIGINT},
      pwd = #{record.pwd,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot_demo.entity.Tstudent">
    update tstudent
    <set>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=BIGINT},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=BIGINT},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=BIGINT},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot_demo.entity.Tstudent">
    update tstudent
    set num = #{num,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      state = #{state,jdbcType=TINYINT},
      province = #{province,jdbcType=BIGINT},
      city = #{city,jdbcType=BIGINT},
      county = #{county,jdbcType=BIGINT},
      pwd = #{pwd,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="selectStuIdByNum" parameterType="java.lang.String" resultType="java.lang.Long">
    select id from Tstudent where num=#{arg0}
 </select>
  <resultMap id="queryStudentMap" type="com.example.springboot_demo.ventity.VStudent">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="num" jdbcType="VARCHAR" property="num"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="gender" jdbcType="CHAR" property="gender"/>
    <result column="tel" jdbcType="VARCHAR" property="tel"/>
    <result column="className" jdbcType="VARCHAR" property="className"/>
    <result column="enteryear" jdbcType="INTEGER" property="enteryear"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
  </resultMap>
  <select id="queryStudentPage" resultMap="queryStudentMap" parameterType="com.example.springboot_demo.ventity.StudentQueryParam">
    select st.id,st.num,st.name,cl.name as className, sy.des as gender,st.tel,cl.enteryear,
    concat(st.state,st.province,st.city,st.county) as address
    from tstudent st,tclass cl,tstuclass sc,tsysdic sy
    where st.id=sc.studentID and sc.classid=cl.id and st.gender=sy.value
    and sy.tablename='COMON' and sy.filedname='GENDER'
    <if test="colleageId!=null and colleageId != ''"> and cl.colleageId = #{colleageId,jdbcType=TINYINT} </if>
    <if test="enteryear!=null and enteryear!=''"> and cl.enteryear=#{enteryear,jdbcType=TINYINT} </if>
    <if test="classId!=null and classId!=''"> and cl.id=#{classId,jdbcType=TINYINT} </if>
    <if test="name!=null and name!=''"> and st.name like concat('%',#{name,jdbcType=VARCHAR},'%') </if>
    order by num asc
  </select>
  <!--   <resultMap id="LoginResultMap" type="com.example.springboot_demo.ventity.User"> -->
  <!--     <id column="id" jdbcType="BIGINT" property="id" /> -->
  <!--     <result column="username" jdbcType="VARCHAR" property="name" /> -->
  <!--     <result column="password" jdbcType="VARCHAR" property="pwd" /> -->
  <!--   </resultMap> -->
  <!--   <select id="getById" resultMap="LoginResultMap"> -->
  <!--     select id,name,pwd from Tstudent where id = #{arg0} -->
  <!--   </select> -->
  <!--   <select id="getByUsername" resultMap="LoginResultMap"> -->
  <!--     select id,name,pwd from Tstudent where name = #{arg0} -->
  <!--   </select> -->
</mapper>